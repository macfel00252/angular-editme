{"version":3,"sources":["../src/editme.js"],"names":[],"mappings":"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","file":"editme.compiled.js","sourcesContent":["(function (root, factory) {\n  // AMD\n  if (typeof define === 'function' && define.amd) {\n    define(['angular'], function (angular) {\n      return factory(angular);\n    });\n  }\n  // Node.js\n  else if (typeof exports === 'object') {\n    module.exports = factory(require('angular'));\n  }\n  // Angular\n  else if (angular) {\n    factory(root.angular);\n  }\n}(window, function (angular) {\n  'use strict';\n\n  let m = angular.module('shaka-editme', []);\n\n  /**\n   * Component wrapper for SVG edit icon\n   */\n  m.component('skEditmeIcon', {\n    template: `\n      <div class=\"icon-wrapper\">\n        edit-icon\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n          <path d=\"M30.173 7.542l-0.314 0.314-5.726-5.729 0.313-0.313c0 0 1.371-1.813 3.321-1.813 0.859 0 1.832 0.353 2.849 1.37 3.354 3.354-0.443 6.171-0.443 6.171zM27.979 9.737l-19.499 19.506-8.48 2.757 2.756-8.485v-0.003h0.002l19.496-19.505 0.252 0.253zM2.76 29.239l4.237-1.219-2.894-3.082-1.343 4.301z\"></path>\n        </svg>\n      </div>\n    `\n  })\n\n\n  m.directive('skEditme', ['$compile', '$timeout', ($compile, $timeout) => {\n    let directive = {\n      scope : {\n        isEditing: '=?',\n        hideIcon: '=?',\n        onStateChange: '&?',\n        onInvalid: '&?',\n        onChange: '&?'\n      },\n      controller: function($scope) {\n        $scope.toggleEdit = (value) => {\n          $scope.isEditing = (value !== undefined) ? value : !$scope.isEditing;\n        };\n      },\n      link: link,\n      transclude: true,\n      template: `\n        <div ng-click=\"toggleEdit(true)\" ng-class=\"{'editme-touch': isTouchEnabled}\">\n          <span ng-hide=\"isEditing\" class=\"model-wrapper\" ng-class=\"{'hide-icon': hideIcon}\">\n            <span class=\"model-content\" ng-class=\"{'edit-active': showEditHint}\">{{model}}</span>\n            <sk-editme-icon ng-class=\"{'edit-active': showEditHint}\" ng-if=\"!isEditing && !hideIcon\"></sk-editme-icon>\n          </span>\n          <content ng-show=\"isEditing\"></content>\n        </div>\n      `\n    };\n\n    return directive;\n\n    function link(scope, element, attrs, ctrl, transclude) {\n      let $content  = element.find('content');\n      let $input    = undefined;\n      let ngModel   = undefined;\n      let prevValue = undefined;\n      let $static   = angular.element(element[0].querySelector('.model-content'));\n      const KEYS    = {\n        ENTER: 13\n      };\n      const VALID_INPUT_TYPES = ['text', 'url', 'date', 'email', 'week', 'month', 'number', 'time'];\n\n      if ('ontouchstart' in document.documentElement) {\n        scope.isTouchEnabled = true;\n      }\n\n      scope.showIcon  = scope.showIcon || true;\n\n      transclude(transcludeFn);\n\n      $static.on('mouseover', () => {\n        scope.showEditHint = true;\n        scope.$apply();\n      });\n\n      $static.on('mouseout', () => {\n        scope.showEditHint = false;\n        scope.$apply();\n      });\n\n      function transcludeFn(clone, innerScope) {\n        const inputTypePattern = new RegExp(VALID_INPUT_TYPES.join('|'), 'gi');\n\n        // This will ensure only valid elements are matched\n        let input = Array.prototype.filter.call(clone, (el) => {\n          let isInputEl    = el.nodeName.toLowerCase() === 'input';\n          let isTextareaEl = el.nodeName.toLowerCase() === 'textarea';\n\n          if (isTextareaEl) {\n            return true;\n          }\n\n          if (isInputEl) {\n            let type = el.getAttribute('type') || '';\n            return (type.search(inputTypePattern) > -1);\n          }\n\n          return false;\n        });\n\n        $input = angular.element(input);\n\n        if (!$input.length || $input.length > 1) {\n          throw new Error('skEditme could not find valid input or textarea element. Please see docs for valid element types.');\n        }\n\n        $content.append($compile($input)(innerScope));\n\n        ngModel = $input.controller('ngModel');\n\n        if (angular.isUndefined(ngModel)) {\n          throw new Error('skEditme transcluded element is missing required ng-model directive');\n        }\n        //throw error/warning if invalid element provided\n\n        // ngModel.$modelView will be initialized as NaN\n        // This ensures we don't initiate our scope.model with NaN\n        let disconnect = scope.$watch(() => ngModel.$modelValue, (value) => {\n          // isNaN doesn't work see http://stackoverflow.com/questions/2652319/how-do-you-check-that-a-number-is-nan-in-javascript\n          let isNotNum = (value !== value);\n\n          if (!isNotNum) {\n            scope.model = value;\n            scope.$watch(() => scope.isEditing, onIsEditingChange);\n            disconnect();\n          }\n        });\n\n        ngModel.$viewChangeListeners.push(() => {\n          scope.model = ngModel.$modelValue\n        });\n      }\n\n      function onIsEditingChange(value) {\n        if (value) {\n          $timeout(() => $input[0].focus());\n          prevValue = angular.copy(scope.model);\n          $input.on('blur keypress', validate);\n        }\n        else {\n          $input.off('blur keypress', validate);\n        }\n\n        if (scope.onStateChange && value !== undefined) {\n          scope.onStateChange({$isEditing: angular.copy(value)});\n        }\n\n        if (scope.onChange &&\n            value === false &&\n            prevValue !== undefined &&\n            prevValue !== scope.model) {\n          scope.onChange({$value: angular.copy(scope.model)});\n        }\n      }\n\n      function validate(evt) {\n        if (evt.type === 'blur' || evt.keyCode === KEYS.ENTER) {\n          scope.isEditing = ngModel.$invalid && ngModel.$dirty;\n          scope.$apply();\n\n          if (ngModel.$error && scope.onInvalid) {\n            scope.onInvalid({$error: angular.copy(ngModel.$error)});\n          }\n        }\n      }\n    }\n  }]);\n\n  return m.name;\n}));\n"]}